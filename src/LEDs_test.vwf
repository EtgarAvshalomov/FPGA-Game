/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 10000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 50.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("led")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 4;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("led[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "led";
}

SIGNAL("led[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "led";
}

SIGNAL("led[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "led";
}

SIGNAL("led[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "led";
}

SIGNAL("led[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "led";
}

SIGNAL("led[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "led";
}

SIGNAL("LED_RESET")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("STOPPER_CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SW")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SW[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("SW[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("SW[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("SW[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("SW[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("SW[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("SW[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("SW[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SW";
}

TRANSITION_LIST("led[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 330.545;
		LEVEL 1 FOR 50.04;
		LEVEL 0 FOR 149.96;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.04;
			LEVEL 0 FOR 49.96;
		}
		LEVEL 1 FOR 50.04;
		LEVEL 0 FOR 8499.96;
		LEVEL 1 FOR 50.04;
		LEVEL 0 FOR 49.96;
		LEVEL 1 FOR 50.04;
		LEVEL 0 FOR 299.96;
		LEVEL 1 FOR 50.04;
		LEVEL 0 FOR 219.415;
	}
}

TRANSITION_LIST("led[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130.561;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.042;
			LEVEL 0 FOR 49.958;
			LEVEL 1 FOR 50.042;
			LEVEL 0 FOR 149.958;
		}
		LEVEL 1 FOR 50.042;
		LEVEL 0 FOR 8449.958;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.042;
			LEVEL 0 FOR 49.958;
		}
		LEVEL 1 FOR 250.042;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 49.958;
			LEVEL 1 FOR 50.042;
		}
		LEVEL 0 FOR 119.397;
	}
}

TRANSITION_LIST("led[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 330.549;
		LEVEL 1 FOR 50.038;
		LEVEL 0 FOR 349.962;
		LEVEL 1 FOR 50.038;
		LEVEL 0 FOR 8499.962;
		LEVEL 1 FOR 50.038;
		LEVEL 0 FOR 399.962;
		LEVEL 1 FOR 50.038;
		LEVEL 0 FOR 219.413;
	}
}

TRANSITION_LIST("led[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130.528;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.027;
			LEVEL 0 FOR 49.973;
		}
		LEVEL 1 FOR 50.027;
		LEVEL 0 FOR 149.973;
		LEVEL 1 FOR 50.027;
		LEVEL 0 FOR 49.973;
		LEVEL 1 FOR 50.027;
		LEVEL 0 FOR 8549.973;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.027;
			LEVEL 0 FOR 49.973;
		}
		LEVEL 1 FOR 250.027;
		LEVEL 0 FOR 99.973;
		LEVEL 1 FOR 50.027;
		LEVEL 0 FOR 49.973;
		LEVEL 1 FOR 119.472;
	}
}

TRANSITION_LIST("led[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130.674;
		LEVEL 1 FOR 50.013;
		LEVEL 0 FOR 149.987;
		LEVEL 1 FOR 50.013;
		LEVEL 0 FOR 49.987;
		LEVEL 1 FOR 50.013;
		LEVEL 0 FOR 349.987;
		LEVEL 1 FOR 50.013;
		LEVEL 0 FOR 8399.987;
		LEVEL 1 FOR 50.013;
		LEVEL 0 FOR 49.987;
		LEVEL 1 FOR 450.013;
		LEVEL 0 FOR 49.987;
		LEVEL 1 FOR 119.326;
	}
}

TRANSITION_LIST("led[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 430.514;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.038;
			LEVEL 0 FOR 49.962;
		}
		LEVEL 1 FOR 50.038;
		LEVEL 0 FOR 8649.962;
		LEVEL 1 FOR 50.038;
		LEVEL 0 FOR 49.962;
		LEVEL 1 FOR 569.486;
	}
}

TRANSITION_LIST("LED_RESET")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 9950.0;
	}
}

TRANSITION_LIST("STOPPER_CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 200;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
		}
	}
}

TRANSITION_LIST("SW[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 9200.0;
	}
}

TRANSITION_LIST("SW[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 650.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 8950.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 300.0;
	}
}

TRANSITION_LIST("SW[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 550.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 9400.0;
	}
}

TRANSITION_LIST("SW[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 450.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 8800.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 650.0;
	}
}

TRANSITION_LIST("SW[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 350.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 8850.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 700.0;
	}
}

TRANSITION_LIST("SW[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 8900.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 750.0;
	}
}

TRANSITION_LIST("SW[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 8950.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
	}
}

TRANSITION_LIST("SW[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 9650.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 200.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "STOPPER_CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LED_RESET";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SW";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "SW[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "SW[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "SW[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "SW[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "SW[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "SW[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "SW[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "SW[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "led";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "led[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "led[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "led[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "led[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "led[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "led[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 11;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
